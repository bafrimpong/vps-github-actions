name: Ruby on Rails CI/CD
on:
  push:
    branches: [main]
  pull_request:
    branches: [development]
jobs:
  Test-CI:
    runs-on: ubuntu-20.04
    services:
          postgres:
            image: postgres:12
            ports: ["5432:5432"]
            env:
              POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
              POSTGRES_USER: ${{ secrets.DB_USERNAME }}
              POSTGRES_DB: ${{ secrets.TEST_ENV_DB }}
            options: >-
              --health-cmd pg_isready 
              --health-interval 10s 
              --health-timeout 5s 
              --health-retries 5
    steps:
        - name: Checkout Repository
          uses: actions/checkout@v2

        - name: Set up Ruby
          uses: ruby/setup-ruby@v1
          with:
            ruby-version: 2.7.4
        - name: Install PostgreSQL 12 Client
          run: |
            sudo apt-get -yqq install libpq-dev

        - name: Cache Ruby Gems
          uses: actions/cache@v2
          with:
            path: vendor/bundle
            key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-gems-
          
        - name: Run Bundle Install
          env:
            RAILS_ENV: test
          run: |
            # bundle config path vendor/bundle
            gem install bundler
            bundle install --jobs 4 --retry 3
        
        - name: Build and test with RSpec / Minitest
          env:
            RAILS_ENV: test
            POSTGRES_HOST: localhost
            POSTGRES_USER: ${{ secrets.DB_USERNAME }}
            POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
            POSTGRES_PORT: ${{ secrets.DB_PORT }}
          run: |
            bundle exec rails db:create
            bundle exec rails db:migrate
            bundle exec rails db:seed
            bundle exec rails test
        # - name: Upload Code Coverage
        #   uses: actions/upload-artifact@v2
        #   with:
        #     name: code-coverage
        #     path: coverage/
        # - name: Formatting and Security Checks
        #   run: |
        #     bundle exec rubocop
        #     bundle exec brakeman -z
        #     gem install bundle-audit
        #     bundle-audit update
        #     bundle-audit
  Remote-Deployment-CD: 
    needs: Test-CI
    name: Deploy to VPS
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Copy repo via scp
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.REMOTE_HOST_IP }}
          USERNAME: ${{ secrets.REMOTE_HOST_USERNAME }}
          PORT: ${{ secrets.REMOTE_HOST_PORT }}
          KEY: ${{ secrets.SSH_KEY }}
        with:
          source: "."
          target: ${{ secrets.APP_HOMEPATH }}

      - name: Execute remote commands via SSH
        uses: appleboy/ssh-action@master
        env:
          POSTGRES_DB: ${{ secrets.TEST_ENV_DB }}
          POSTGRES_HOST: ${{ secrets.REMOTE_HOST_IP }}
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          RAILS_ENV: test
        with:
          HOST: ${{ secrets.REMOTE_HOST_IP }}
          USERNAME: ${{ secrets.REMOTE_HOST_USERNAME }}
          KEY: ${{ secrets.SSH_KEY }}
          PORT: ${{ secrets.REMOTE_HOST_PORT }}
          script_stop: true
          script: |
            cd / 
            cd ${{ secrets.APP_HOMEPATH }}
            ls